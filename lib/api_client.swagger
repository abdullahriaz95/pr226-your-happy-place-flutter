{
    "swagger": "2.0",
    "info": {
        "title": "Your Happy Place API",
        "version": "1.0.0.20220405"
    },
    "host": "newyourhappyplace.sandbox19.preview.cx",
    "schemes": [
        "http"
    ],
    "basePath": "\/api\/v1",
    "paths": {
        "\/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "auth_post_register",
                "description": "This endpoint registers a user.If you need to update a profile image, upload the profile image in thebackground using `\/avatar` endpoint.",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "`application\/json`",
                        "type": "string"
                    },
                    {
                        "name": "device_id",
                        "in": "formData",
                        "required": true,
                        "description": "Unique ID of the device",
                        "type": "string"
                    },
                    {
                        "name": "device_type",
                        "in": "formData",
                        "required": true,
                        "description": "Type of the device `APPLE` or `ANDROID`",
                        "type": "string"
                    },
                    {
                        "name": "device_push_token",
                        "in": "formData",
                        "required": false,
                        "description": "Unique push token for the device",
                        "type": "string"
                    },
                    {
                        "name": "first_name",
                        "in": "formData",
                        "required": false,
                        "description": "First name of the user",
                        "type": "string"
                    },
                    {
                        "name": "last_name",
                        "in": "formData",
                        "required": false,
                        "description": "Last name of the user",
                        "type": "string"
                    },
                    {
                        "name": "gender_id",
                        "in": "formData",
                        "required": false,
                        "description": "Gender id of selected gender",
                        "type": "number"
                    },
                    {
                        "name": "age_group",
                        "in": "formData",
                        "required": false,
                        "description": "Age group",
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "required": true,
                        "description": "Email address of user",
                        "type": "string"
                    },
                    {
                        "name": "address",
                        "in": "formData",
                        "required": false,
                        "description": "Location of the user",
                        "type": "string"
                    },
                    {
                        "name": "latitude",
                        "in": "formData",
                        "required": false,
                        "description": "Latitude of the location",
                        "type": "string"
                    },
                    {
                        "name": "longitude",
                        "in": "formData",
                        "required": false,
                        "description": "Longitude of the location",
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "formData",
                        "required": false,
                        "description": "username for login",
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "required": true,
                        "description": "Password. Must be at least 8 characters.",
                        "type": "string"
                    },
                    {
                        "name": "password_confirmation",
                        "in": "formData",
                        "required": false,
                        "description": "Confirm password. Must be at least 8 characters.",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/AuthRegisterResponse"
                        },
                        "description": "AuthRegisterResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "auth_post_login",
                "description": "",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "`application\/json`",
                        "type": "string"
                    },
                    {
                        "name": "device_id",
                        "in": "formData",
                        "required": true,
                        "description": "Unique ID of the device",
                        "type": "string"
                    },
                    {
                        "name": "device_type",
                        "in": "formData",
                        "required": true,
                        "description": "Type of the device `APPLE` or `ANDROID`",
                        "type": "string"
                    },
                    {
                        "name": "device_push_token",
                        "in": "formData",
                        "required": false,
                        "description": "Unique push token for the device",
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "required": true,
                        "description": "Email",
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "required": true,
                        "description": "Password",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/AuthLoginResponse"
                        },
                        "description": "AuthLoginResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/password\/email": {
            "post": {
                "tags": [
                    "ForgotPassword"
                ],
                "summary": "Reset Password",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "forgotpassword_post_reset_password",
                "description": "",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "`application\/json`",
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "required": true,
                        "description": "Email",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/SuccessResponse"
                        },
                        "description": "SuccessResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/login\/social": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Social Login",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "auth_post_social_login",
                "description": "This endpoint is for social login",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "`application\/json`",
                        "type": "string"
                    },
                    {
                        "name": "provider",
                        "in": "formData",
                        "required": true,
                        "description": "Provider for social login",
                        "type": "string"
                    },
                    {
                        "name": "token",
                        "in": "formData",
                        "required": true,
                        "description": "Token form social login provider",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/AuthSocialLoginResponse"
                        },
                        "description": "AuthSocialLoginResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/settings": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get Settings",
                "consumes": [
                    "application\/json"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "settings_get_get_settings",
                "description": "Returns all app settings. Each setting value is identified by the respective key.",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "`application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/SettingsGetSettingsResponse"
                        },
                        "description": "SettingsGetSettingsResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/logout": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "auth_get_logout",
                "description": "Logout the user from current device",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/SuccessResponse"
                        },
                        "description": "SuccessResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/profile": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "My Profile",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "profile_get_my_profile",
                "description": "Get currently logged in user's profile",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/ProfileMyProfileResponse"
                        },
                        "description": "ProfileMyProfileResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            },
            "put": {
                "tags": [
                    "Profile"
                ],
                "summary": "Update My Profile",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "profile_put_update_my_profile",
                "description": "",
                "parameters": [
                    {
                        "name": "first_name",
                        "in": "formData",
                        "required": true,
                        "description": "First name",
                        "type": "string"
                    },
                    {
                        "name": "last_name",
                        "in": "formData",
                        "required": false,
                        "description": "Last name",
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "required": true,
                        "description": "Email",
                        "type": "string"
                    },
                    {
                        "name": "phone",
                        "in": "formData",
                        "required": false,
                        "description": "Phone",
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "required": false,
                        "description": "Description",
                        "type": "string"
                    },
                    {
                        "name": "gender_id",
                        "in": "formData",
                        "required": true,
                        "description": "1: Male | 2: Femail | 3: Other",
                        "type": "number"
                    },
                    {
                        "name": "age_group",
                        "in": "formData",
                        "required": true,
                        "description": "ID of the age group returned from age group API",
                        "type": "string"
                    },
                    {
                        "name": "address",
                        "in": "formData",
                        "required": true,
                        "description": "Address",
                        "type": "string"
                    },
                    {
                        "name": "latitude",
                        "in": "formData",
                        "required": true,
                        "description": "latitude",
                        "type": "string"
                    },
                    {
                        "name": "longitude",
                        "in": "formData",
                        "required": true,
                        "description": "longitude",
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "formData",
                        "required": true,
                        "description": "username",
                        "type": "string"
                    },
                    {
                        "name": "posts_keep_private",
                        "in": "formData",
                        "required": false,
                        "description": "Posts keep private setting | 0 for no, 1 for yes",
                        "type": "integer"
                    },
                    {
                        "name": "posts_with_public",
                        "in": "formData",
                        "required": false,
                        "description": "Posts share with public setting | 0 for no, 1 for yes",
                        "type": "integer"
                    },
                    {
                        "name": "posts_with_family",
                        "in": "formData",
                        "required": false,
                        "description": "Posts share with family setting | 0 for no, 1 for yes",
                        "type": "integer"
                    },
                    {
                        "name": "posts_with_friends",
                        "in": "formData",
                        "required": false,
                        "description": "Posts share with friends setting | 0 for no, 1 for yes",
                        "type": "integer"
                    },
                    {
                        "name": "visible_username",
                        "in": "formData",
                        "required": false,
                        "description": "username visible  | 0 for no, 1 for yes",
                        "type": "integer"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/ProfileUpdateMyProfileResponse"
                        },
                        "description": "ProfileUpdateMyProfileResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/friends": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "My Friends",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "profile_get_my_friends",
                "description": "Get the friends list of the user",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/ProfileMyFriendsResponse"
                        },
                        "description": "ProfileMyFriendsResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/family": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "My Family",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "profile_get_my_family",
                "description": "Get the Family of the user",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/ProfileMyFamilyResponse"
                        },
                        "description": "ProfileMyFamilyResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/friend-requests": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "My Friend Requests",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "profile_get_my_friend_requests",
                "description": "Get the friend Requests",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/ProfileMyFriendRequestsResponse"
                        },
                        "description": "ProfileMyFriendRequestsResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/family-requests": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "My Family Requests",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "profile_get_my_family_requests",
                "description": "Get the List of family Requests",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/ProfileMyFamilyRequestsResponse"
                        },
                        "description": "ProfileMyFamilyRequestsResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/profile\/complete-profile-remember": {
            "put": {
                "tags": [
                    "Profile"
                ],
                "summary": "Hide Profile update message",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "profile_put_hide_profile_update_message",
                "description": "Remember user profile update message option",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/ProfileHideProfileUpdateMessageResponse"
                        },
                        "description": "ProfileHideProfileUpdateMessageResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/profile\/settings": {
            "put": {
                "tags": [
                    "Profile"
                ],
                "summary": "Update My Profile Settings",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "profile_put_update_my_profile_settings",
                "description": "",
                "parameters": [
                    {
                        "name": "posts_keep_private",
                        "in": "formData",
                        "required": false,
                        "description": "Posts keep private setting | 0 for no, 1 for yes",
                        "type": "integer"
                    },
                    {
                        "name": "posts_with_public",
                        "in": "formData",
                        "required": false,
                        "description": "Posts share with public setting | 0 for no, 1 for yes",
                        "type": "integer"
                    },
                    {
                        "name": "posts_with_family",
                        "in": "formData",
                        "required": false,
                        "description": "Posts share with family setting | 0 for no, 1 for yes",
                        "type": "integer"
                    },
                    {
                        "name": "posts_with_friends",
                        "in": "formData",
                        "required": false,
                        "description": "Posts share with friends setting | 0 for no, 1 for yes",
                        "type": "integer"
                    },
                    {
                        "name": "visible_username",
                        "in": "formData",
                        "required": false,
                        "description": "username visible  | 0 for no, 1 for yes",
                        "type": "integer"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/ProfileUpdateMyProfileSettingsResponse"
                        },
                        "description": "ProfileUpdateMyProfileSettingsResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/avatar": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Update My Avatar",
                "consumes": [
                    "multipart\/form-data"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "profile_post_update_my_avatar",
                "description": "",
                "parameters": [
                    {
                        "name": "image",
                        "in": "formData",
                        "required": true,
                        "description": "Image",
                        "type": "file"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/ProfileUpdateMyAvatarResponse"
                        },
                        "description": "ProfileUpdateMyAvatarResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/cover": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Update My Cover Image",
                "consumes": [
                    "multipart\/form-data"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "profile_post_update_my_cover_image",
                "description": "",
                "parameters": [
                    {
                        "name": "image",
                        "in": "formData",
                        "required": true,
                        "description": "Image",
                        "type": "file"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/ProfileUpdateMyCoverImageResponse"
                        },
                        "description": "ProfileUpdateMyCoverImageResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/password\/edit": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Update Password",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "auth_post_update_password",
                "description": "",
                "parameters": [
                    {
                        "name": "password",
                        "in": "formData",
                        "required": true,
                        "description": "Password",
                        "type": "string"
                    },
                    {
                        "name": "current_password",
                        "in": "formData",
                        "required": true,
                        "description": "Current password",
                        "type": "string"
                    },
                    {
                        "name": "password_confirmation",
                        "in": "formData",
                        "required": true,
                        "description": "Password confirmation",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/SuccessResponse"
                        },
                        "description": "SuccessResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/moods": {
            "get": {
                "tags": [
                    "Moods"
                ],
                "summary": "List",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "moods_get_list",
                "description": "This endpoint returns records list of the entity",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "`application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/MoodsListResponse"
                        },
                        "description": "MoodsListResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/moods\/{id}": {
            "get": {
                "tags": [
                    "Moods"
                ],
                "summary": "view",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "moods_get_view",
                "description": "This endpoint view requested entity",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "`application\/json`",
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "ID of the entity",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/MoodsViewResponse"
                        },
                        "description": "MoodsViewResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/moods\/{id}\/types": {
            "get": {
                "tags": [
                    "Moods"
                ],
                "summary": "Types",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "moods_get_types",
                "description": "This endpoint returns mood types",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "`application\/json`",
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Mood Id",
                        "type": "integer"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/MoodsTypesResponse"
                        },
                        "description": "MoodsTypesResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/places": {
            "get": {
                "tags": [
                    "Places"
                ],
                "summary": "List",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "places_get_list",
                "description": "This endpoint returns records list of the entity",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "`application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/PlacesListResponse"
                        },
                        "description": "PlacesListResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/places\/{id}": {
            "get": {
                "tags": [
                    "Places"
                ],
                "summary": "view",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "places_get_view",
                "description": "This endpoint view requested entity",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "`application\/json`",
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "ID of the entity",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/PlacesViewResponse"
                        },
                        "description": "PlacesViewResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/places\/{id}\/types": {
            "get": {
                "tags": [
                    "Places"
                ],
                "summary": "Types",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "places_get_types",
                "description": "This endpoint returns Places types",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "`application\/json`",
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Place Id",
                        "type": "integer"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/PlacesTypesResponse"
                        },
                        "description": "PlacesTypesResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/activities": {
            "get": {
                "tags": [
                    "Activities"
                ],
                "summary": "List",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "activities_get_list",
                "description": "This endpoint returns records list of the entity",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "`application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/ActivitiesListResponse"
                        },
                        "description": "ActivitiesListResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/activities\/{id}": {
            "get": {
                "tags": [
                    "Activities"
                ],
                "summary": "view",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "activities_get_view",
                "description": "This endpoint view requested entity",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "`application\/json`",
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "ID of the entity",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/ActivitiesViewResponse"
                        },
                        "description": "ActivitiesViewResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/activities\/{id}\/types": {
            "get": {
                "tags": [
                    "Activities"
                ],
                "summary": "Types",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "activities_get_types",
                "description": "This endpoint returns Activity types",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "`application\/json`",
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Activity Id",
                        "type": "integer"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/ActivitiesTypesResponse"
                        },
                        "description": "ActivitiesTypesResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/feelings": {
            "get": {
                "tags": [
                    "Feelings"
                ],
                "summary": "List",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "feelings_get_list",
                "description": "This endpoint returns records list of the entity",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "`application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/FeelingsListResponse"
                        },
                        "description": "FeelingsListResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/feelings\/{id}": {
            "get": {
                "tags": [
                    "Feelings"
                ],
                "summary": "view",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "feelings_get_view",
                "description": "This endpoint view requested entity",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "`application\/json`",
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "ID of the entity",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/FeelingsViewResponse"
                        },
                        "description": "FeelingsViewResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/feelings\/{id}\/types": {
            "get": {
                "tags": [
                    "Feelings"
                ],
                "summary": "Types",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "feelings_get_types",
                "description": "This endpoint returns Feeling types",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "`application\/json`",
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Feeling Id",
                        "type": "integer"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/FeelingsTypesResponse"
                        },
                        "description": "FeelingsTypesResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/feeling-ratings": {
            "get": {
                "tags": [
                    "Feelings"
                ],
                "summary": "List Ratings",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "feelings_get_list_ratings",
                "description": "",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/FeelingsListRatingsResponse"
                        },
                        "description": "FeelingsListRatingsResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/visited-places": {
            "get": {
                "tags": [
                    "Visited Places"
                ],
                "summary": "List",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "visited_places_get_list",
                "description": "This endpoint returns paginated list of the entity",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "`application\/json`",
                        "type": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "required": true,
                        "description": "search by location",
                        "type": "string"
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": false,
                        "description": "search by user",
                        "type": "integer"
                    },
                    {
                        "name": "place_id",
                        "in": "query",
                        "required": false,
                        "description": "search by place",
                        "type": "integer"
                    },
                    {
                        "name": "place_type_id",
                        "in": "query",
                        "required": false,
                        "description": "search by place_type",
                        "type": "integer"
                    },
                    {
                        "name": "feeling_rating",
                        "in": "query",
                        "required": false,
                        "description": "search by feeling rating",
                        "type": "integer"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "required": false,
                        "description": "search by date",
                        "type": "string"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "required": false,
                        "description": "search by date",
                        "type": "string"
                    },
                    {
                        "name": "mood_id",
                        "in": "query",
                        "required": false,
                        "description": "Id of the mood",
                        "type": "string"
                    },
                    {
                        "name": "activity_id",
                        "in": "query",
                        "required": false,
                        "description": "Id of the activity",
                        "type": "string"
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "required": false,
                        "description": "longitude of base location to search",
                        "type": "string"
                    },
                    {
                        "name": "latitude",
                        "in": "query",
                        "required": false,
                        "description": "latitude of base location to search",
                        "type": "string"
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "required": false,
                        "description": "Radius to serch - km",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/VisitedPlacesListResponse"
                        },
                        "description": "VisitedPlacesListResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            },
            "post": {
                "tags": [
                    "Visited Places"
                ],
                "summary": "Save",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "visited_places_post_save",
                "description": "This endpoint save the record in DB",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "`application\/json`",
                        "type": "string"
                    },
                    {
                        "name": "location",
                        "in": "formData",
                        "required": true,
                        "description": "address of",
                        "type": "string"
                    },
                    {
                        "name": "latitude",
                        "in": "formData",
                        "required": true,
                        "description": "latitude of the address",
                        "type": "string"
                    },
                    {
                        "name": "longitude",
                        "in": "formData",
                        "required": true,
                        "description": "longitude of the address",
                        "type": "string"
                    },
                    {
                        "name": "mood_id",
                        "in": "formData",
                        "required": true,
                        "description": "ID of selected mood",
                        "type": "integer"
                    },
                    {
                        "name": "mood_type_id",
                        "in": "formData",
                        "required": true,
                        "description": "ID of selected mood_type",
                        "type": "integer"
                    },
                    {
                        "name": "place_id",
                        "in": "formData",
                        "required": true,
                        "description": "ID of selected place",
                        "type": "integer"
                    },
                    {
                        "name": "place_type_id",
                        "in": "formData",
                        "required": true,
                        "description": "ID of selected place_type",
                        "type": "integer"
                    },
                    {
                        "name": "activity_id",
                        "in": "formData",
                        "required": true,
                        "description": "ID of selected activity",
                        "type": "integer"
                    },
                    {
                        "name": "activity_type_id",
                        "in": "formData",
                        "required": true,
                        "description": "ID of selected activity_type",
                        "type": "integer"
                    },
                    {
                        "name": "feeling_id",
                        "in": "formData",
                        "required": true,
                        "description": "ID of selected feeling",
                        "type": "integer"
                    },
                    {
                        "name": "feeling_type_id",
                        "in": "formData",
                        "required": false,
                        "description": "ID of selected feeling_type",
                        "type": "integer"
                    },
                    {
                        "name": "feeling_rating",
                        "in": "formData",
                        "required": false,
                        "description": "selected rating 1,2,3,4,5",
                        "type": "integer"
                    },
                    {
                        "name": "feeling_note",
                        "in": "formData",
                        "required": false,
                        "description": "feeling note ",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/VisitedPlacesSaveResponse"
                        },
                        "description": "VisitedPlacesSaveResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/visited-places\/{id}\/feelings": {
            "post": {
                "tags": [
                    "Visited Places"
                ],
                "summary": "Save Feeling",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "visited_places_post_save_feeling",
                "description": "This endpoint save the record in DB",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Visited place ID",
                        "type": "integer"
                    },
                    {
                        "name": "feeling_rating",
                        "in": "formData",
                        "required": false,
                        "description": "feeling note ",
                        "type": "integer"
                    },
                    {
                        "name": "feeling_note",
                        "in": "formData",
                        "required": false,
                        "description": "Feeling Note",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/VisitedPlacesSaveFeelingResponse"
                        },
                        "description": "VisitedPlacesSaveFeelingResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/answers": {
            "post": {
                "tags": [
                    "Test"
                ],
                "summary": "Store Answer",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "test_post_store_answer",
                "description": "",
                "parameters": [
                    {
                        "name": "question_and_answers",
                        "in": "formData",
                        "required": true,
                        "description": "Q abd A as json array e.g. [{\"question_id\":1,\"answer\":5},{\"question_id\":2,\"answer\":3}]",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/SuccessResponse"
                        },
                        "description": "SuccessResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/my-activities": {
            "post": {
                "tags": [
                    "My Activities"
                ],
                "summary": "Store My Activity Location",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "my_activities_post_store_my_activity_location",
                "description": "",
                "parameters": [
                    {
                        "name": "activity_id",
                        "in": "formData",
                        "required": true,
                        "description": "Activity Category ID",
                        "type": "integer"
                    },
                    {
                        "name": "location",
                        "in": "formData",
                        "required": true,
                        "description": "Activity Location Address",
                        "type": "string"
                    },
                    {
                        "name": "latitude",
                        "in": "formData",
                        "required": true,
                        "description": "latitude of the Location Address",
                        "type": "string"
                    },
                    {
                        "name": "longitude",
                        "in": "formData",
                        "required": true,
                        "description": "longitude of the Location Address",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/MyActivitiesStoreMyActivityLocationResponse"
                        },
                        "description": "MyActivitiesStoreMyActivityLocationResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            },
            "get": {
                "tags": [
                    "My Activities"
                ],
                "summary": "Search",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "my_activities_get_search",
                "description": "",
                "parameters": [
                    {
                        "name": "activity_id",
                        "in": "query",
                        "required": false,
                        "description": "Activity Category ID",
                        "type": "integer"
                    },
                    {
                        "name": "latitude",
                        "in": "query",
                        "required": false,
                        "description": "latitude of the Location Address",
                        "type": "string"
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "required": false,
                        "description": "longitude of the Location Address",
                        "type": "string"
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "required": false,
                        "description": "longitude of the Location Address",
                        "type": "integer"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Num of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page Number",
                        "type": "integer"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/MyActivitiesSearchResponse"
                        },
                        "description": "MyActivitiesSearchResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/happyness-options": {
            "get": {
                "tags": [
                    "Happyness Options"
                ],
                "summary": "List",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "happyness_options_get_list",
                "description": "",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Num of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page Number",
                        "type": "integer"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/HappynessOptionsListResponse"
                        },
                        "description": "HappynessOptionsListResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/happyness-tests\/{id}\/questions": {
            "get": {
                "tags": [
                    "Happyness Tests"
                ],
                "summary": "questions",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "happyness_tests_get_questions",
                "description": "",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Test ID",
                        "type": "string"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Num of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page Number",
                        "type": "integer"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/HappynessTestsQuestionsResponse"
                        },
                        "description": "HappynessTestsQuestionsResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/happyness-tests\/bigfive\/results": {
            "get": {
                "tags": [
                    "Test Results"
                ],
                "summary": "Get BigFive Test Results",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "test_results_get_get_bigfive_test_results",
                "description": "",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/TestResultsGetBigFiveTestResultsResponse"
                        },
                        "description": "TestResultsGetBigFiveTestResultsResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/happyness-tests\/hexaco\/results": {
            "get": {
                "tags": [
                    "Test Results"
                ],
                "summary": "Get HEXACO Test Results",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "test_results_get_get_hexaco_test_results",
                "description": "",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/TestResultsGetHEXACOTestResultsResponse"
                        },
                        "description": "TestResultsGetHEXACOTestResultsResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/happyness-tests\/happiness\/results": {
            "get": {
                "tags": [
                    "Test Results"
                ],
                "summary": "Get Happiness Test Results",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "test_results_get_get_happiness_test_results",
                "description": "",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/TestResultsGetHappinessTestResultsResponse"
                        },
                        "description": "TestResultsGetHappinessTestResultsResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/happyness-tests": {
            "get": {
                "tags": [
                    "Happyness Tests"
                ],
                "summary": "List",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "happyness_tests_get_list",
                "description": "",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Num of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page Number",
                        "type": "integer"
                    },
                    {
                        "name": "option_id",
                        "in": "query",
                        "required": false,
                        "description": "Option Id",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/HappynessTestsListResponse"
                        },
                        "description": "HappynessTestsListResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Search",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "users_get_search",
                "description": "",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "required": false,
                        "description": "Search by user name",
                        "type": "string"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Num of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page Number",
                        "type": "integer"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/UsersSearchResponse"
                        },
                        "description": "UsersSearchResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/users\/age-groups": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Age groups",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "users_get_age_groups",
                "description": "",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Num of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page Number",
                        "type": "integer"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/UsersAgeGroupsResponse"
                        },
                        "description": "UsersAgeGroupsResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/friend-family": {
            "post": {
                "tags": [
                    "Friend"
                ],
                "summary": "Add friend or family",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "friend_post_add_friend_or_family",
                "description": "",
                "parameters": [
                    {
                        "name": "friend_id",
                        "in": "formData",
                        "required": true,
                        "description": "User id to add as friend or family",
                        "type": "integer"
                    },
                    {
                        "name": "relation_type",
                        "in": "formData",
                        "required": true,
                        "description": "1 : Friend | 2 : Family",
                        "type": "integer"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/FriendAddFriendOrFamilyResponse"
                        },
                        "description": "FriendAddFriendOrFamilyResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Friend"
                ],
                "summary": "Remove friend or family",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "friend_delete_remove_friend_or_family",
                "description": "",
                "parameters": [
                    {
                        "name": "friend_ids",
                        "in": "formData",
                        "required": true,
                        "description": "comma seperated users ids to remove | ex: 1,2,3,4",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/SuccessResponse"
                        },
                        "description": "SuccessResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/friend-family\/accept": {
            "put": {
                "tags": [
                    "Friend"
                ],
                "summary": "Accept Friend or Family Request",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "friend_put_accept_friend_or_family_request",
                "description": "",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "formData",
                        "required": true,
                        "description": "Id of the requested friend ID",
                        "type": "integer"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/FriendAcceptFriendOrFamilyRequestResponse"
                        },
                        "description": "FriendAcceptFriendOrFamilyRequestResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/friend-family\/reject": {
            "put": {
                "tags": [
                    "Friend"
                ],
                "summary": "Reject Friend or Family Request",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "friend_put_reject_friend_or_family_request",
                "description": "",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "formData",
                        "required": true,
                        "description": "Id of the requested friend ID",
                        "type": "integer"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/FriendRejectFriendOrFamilyRequestResponse"
                        },
                        "description": "FriendRejectFriendOrFamilyRequestResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/entires": {
            "get": {
                "tags": [
                    "Entries"
                ],
                "summary": "Index - Entries explorer",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "entries_get_index-_entries_explorer",
                "description": "This endpoint returns paginated list of entries added by the user, friends and family",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "`application\/json`",
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page Number",
                        "type": "integer"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Items per page",
                        "type": "integer"
                    },
                    {
                        "name": "lat",
                        "in": "query",
                        "required": false,
                        "description": "Location latitude | send current lat as default",
                        "type": "string"
                    },
                    {
                        "name": "long",
                        "in": "query",
                        "required": false,
                        "description": "Location longitude | send current long as default",
                        "type": "string"
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "required": false,
                        "description": "radius from current location in KM | ex : 10 | default is 10",
                        "type": "string"
                    },
                    {
                        "name": "explore_by",
                        "in": "query",
                        "required": false,
                        "description": "`all` for get all, `my` for get current user's s, `others` to get family and friend's",
                        "type": "string"
                    },
                    {
                        "name": "moods",
                        "in": "query",
                        "required": false,
                        "description": "mood, feeling, places ids seperated with a comma | ex : 1,23,55,85,23",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/EntriesIndex-EntriesExplorerResponse"
                        },
                        "description": "EntriesIndex-EntriesExplorerResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            },
            "post": {
                "tags": [
                    "Entries"
                ],
                "summary": "Store",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "entries_post_store",
                "description": "",
                "parameters": [
                    {
                        "name": "location",
                        "in": "formData",
                        "required": true,
                        "description": "Location address",
                        "type": "string"
                    },
                    {
                        "name": "latitude",
                        "in": "formData",
                        "required": true,
                        "description": "Latitude of the place",
                        "type": "string"
                    },
                    {
                        "name": "longitude",
                        "in": "formData",
                        "required": true,
                        "description": "Longitude of the place",
                        "type": "string"
                    },
                    {
                        "name": "privacy_level",
                        "in": "formData",
                        "required": true,
                        "description": "Privacy level 1: Private | 2: Public | 3: Friends Only | 4: Family Only | 5: Fiends and family only",
                        "type": "integer"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "required": true,
                        "description": "Entry title",
                        "type": "string"
                    },
                    {
                        "name": "post_date",
                        "in": "formData",
                        "required": true,
                        "description": "Entry date | ex: 2020-02-28",
                        "type": "string"
                    },
                    {
                        "name": "mood_id",
                        "in": "formData",
                        "required": true,
                        "description": "Mood Id",
                        "type": "integer"
                    },
                    {
                        "name": "note",
                        "in": "formData",
                        "required": true,
                        "description": "Description of the post",
                        "type": "string"
                    },
                    {
                        "name": "image_paths",
                        "in": "formData",
                        "required": false,
                        "description": "Json array of image URLs e.g. [\"http:\/\/localhost\/storage\/images\/1cc.jpg\",\"http:\/\/localhost\/storage\/images\/1cc2.jpg\"]",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/EntriesStoreResponse"
                        },
                        "description": "EntriesStoreResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/entries": {
            "get": {
                "tags": [
                    "Entries"
                ],
                "summary": "List",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "entries_get_list",
                "description": "",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "description": "my|shared_with_me",
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number",
                        "type": "integer"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Items per page",
                        "type": "integer"
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "required": false,
                        "description": "longitude of searched location",
                        "type": "string"
                    },
                    {
                        "name": "latitude",
                        "in": "query",
                        "required": false,
                        "description": "latitude of searched location",
                        "type": "string"
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "required": false,
                        "description": "Required radius from KM",
                        "type": "string"
                    },
                    {
                        "name": "moods",
                        "in": "query",
                        "required": false,
                        "description": "Mood ids seperated with a comma | ex: 1,21,45,56",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/EntriesListResponse"
                        },
                        "description": "EntriesListResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Entries"
                ],
                "summary": "Delete posts",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "entries_delete_delete_posts",
                "description": "",
                "parameters": [
                    {
                        "name": "id_list",
                        "in": "formData",
                        "required": true,
                        "description": "comma separated id list to delete posts",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/SuccessResponse"
                        },
                        "description": "SuccessResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/entries\/{id}": {
            "put": {
                "tags": [
                    "Entries"
                ],
                "summary": "Update",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "entries_put_update",
                "description": "",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Entry Id to Edit",
                        "type": "string"
                    },
                    {
                        "name": "location",
                        "in": "formData",
                        "required": true,
                        "description": "Location address",
                        "type": "string"
                    },
                    {
                        "name": "latitude",
                        "in": "formData",
                        "required": true,
                        "description": "Latitude of the place",
                        "type": "string"
                    },
                    {
                        "name": "longitude",
                        "in": "formData",
                        "required": true,
                        "description": "Longitude of the place",
                        "type": "string"
                    },
                    {
                        "name": "privacy_level",
                        "in": "formData",
                        "required": true,
                        "description": "Privacy level 1: Private | 2: Public | 3: Friends Only | 4: Family Only | 5: Fiends and family only",
                        "type": "integer"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "required": true,
                        "description": "Entry title",
                        "type": "string"
                    },
                    {
                        "name": "post_date",
                        "in": "formData",
                        "required": true,
                        "description": "Entry date",
                        "type": "string"
                    },
                    {
                        "name": "mood_id",
                        "in": "formData",
                        "required": true,
                        "description": "Mood Id",
                        "type": "integer"
                    },
                    {
                        "name": "note",
                        "in": "formData",
                        "required": false,
                        "description": "Description of the post",
                        "type": "string"
                    },
                    {
                        "name": "image_paths",
                        "in": "formData",
                        "required": false,
                        "description": "Json array of image URLs e.g. [\"http:\/\/localhost\/storage\/images\/1cc.jpg\",\"http:\/\/localhost\/storage\/images\/1cc2.jpg\"]",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/EntriesUpdateResponse"
                        },
                        "description": "EntriesUpdateResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/entries\/shared-posts": {
            "get": {
                "tags": [
                    "Entries"
                ],
                "summary": "Get Shared Posts",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "entries_get_get_shared_posts",
                "description": "",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number",
                        "type": "integer"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Items per page",
                        "type": "integer"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/EntriesGetSharedPostsResponse"
                        },
                        "description": "EntriesGetSharedPostsResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/entries\/share": {
            "post": {
                "tags": [
                    "Entries"
                ],
                "summary": "Share a posts",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "entries_post_share_a_posts",
                "description": "",
                "parameters": [
                    {
                        "name": "shared_to",
                        "in": "formData",
                        "required": true,
                        "description": "Shared to user ID",
                        "type": "integer"
                    },
                    {
                        "name": "post_id",
                        "in": "formData",
                        "required": true,
                        "description": "Id of the entry to share",
                        "type": "integer"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "required": true,
                        "description": "description",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/EntriesShareAPostsResponse"
                        },
                        "description": "EntriesShareAPostsResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/image": {
            "post": {
                "tags": [
                    "Image"
                ],
                "summary": "Store Image",
                "consumes": [
                    "multipart\/form-data"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "image_post_store_image",
                "description": "Create new image file",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "`application\/json`",
                        "type": "string"
                    },
                    {
                        "name": "image",
                        "in": "formData",
                        "required": true,
                        "description": "Image file to upload",
                        "type": "file"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/ImageStoreImageResponse"
                        },
                        "description": "ImageStoreImageResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/my-places": {
            "post": {
                "tags": [
                    "My Places"
                ],
                "summary": "Add My Place",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "my_places_post_add_my_place",
                "description": "",
                "parameters": [
                    {
                        "name": "location",
                        "in": "formData",
                        "required": true,
                        "description": "Location address",
                        "type": "string"
                    },
                    {
                        "name": "latitude",
                        "in": "formData",
                        "required": true,
                        "description": "Latitude of the place",
                        "type": "string"
                    },
                    {
                        "name": "longitude",
                        "in": "formData",
                        "required": true,
                        "description": "Longitude of the place",
                        "type": "string"
                    },
                    {
                        "name": "my_place_category_id",
                        "in": "formData",
                        "required": true,
                        "description": "Category id of my place",
                        "type": "integer"
                    },
                    {
                        "name": "my_place_opinion_id",
                        "in": "formData",
                        "required": true,
                        "description": "Opinion Id of the place",
                        "type": "integer"
                    },
                    {
                        "name": "note",
                        "in": "formData",
                        "required": true,
                        "description": "Note for the place",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/MyPlacesAddMyPlaceResponse"
                        },
                        "description": "MyPlacesAddMyPlaceResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            },
            "get": {
                "tags": [
                    "My Places"
                ],
                "summary": "List",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "my_places_get_list",
                "description": "",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Num of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page Number",
                        "type": "integer"
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "required": false,
                        "description": "My place category Id to filter",
                        "type": "integer"
                    },
                    {
                        "name": "opinion_id",
                        "in": "query",
                        "required": false,
                        "description": "My place opinion Id to filter",
                        "type": "integer"
                    },
                    {
                        "name": "place_name",
                        "in": "query",
                        "required": false,
                        "description": "Name of the location",
                        "type": "string"
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "required": false,
                        "description": "longitude of searched location",
                        "type": "string"
                    },
                    {
                        "name": "latitude",
                        "in": "query",
                        "required": false,
                        "description": "latitude of searched location",
                        "type": "string"
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "required": false,
                        "description": "Required radius from KM",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/MyPlacesListResponse"
                        },
                        "description": "MyPlacesListResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/my-places\/categories": {
            "get": {
                "tags": [
                    "My Place Categories"
                ],
                "summary": "My place categories",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "my_place_categories_get_my_place_categories",
                "description": "",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "`application\/json`",
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "description": "Page number",
                        "type": "string"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": true,
                        "description": "Number of Items per page",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/MyPlaceCategoriesMyPlaceCategoriesResponse"
                        },
                        "description": "MyPlaceCategoriesMyPlaceCategoriesResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/my-places\/opinions": {
            "get": {
                "tags": [
                    "My Places"
                ],
                "summary": "My place Opinions",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "my_places_get_my_place_opinions",
                "description": "",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "`application\/json`",
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "description": "Page number",
                        "type": "string"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": true,
                        "description": "Number of Items per page",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/MyPlacesMyPlaceOpinionsResponse"
                        },
                        "description": "MyPlacesMyPlaceOpinionsResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/diaries": {
            "post": {
                "tags": [
                    "Diaries"
                ],
                "summary": "Store",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "diaries_post_store",
                "description": "",
                "parameters": [
                    {
                        "name": "address",
                        "in": "formData",
                        "required": true,
                        "description": "Location address",
                        "type": "string"
                    },
                    {
                        "name": "latitude",
                        "in": "formData",
                        "required": true,
                        "description": "Latitude of the place",
                        "type": "string"
                    },
                    {
                        "name": "longitude",
                        "in": "formData",
                        "required": true,
                        "description": "Longitude of the place",
                        "type": "string"
                    },
                    {
                        "name": "event_time",
                        "in": "formData",
                        "required": true,
                        "description": "Time of the journal 2021-03-15 23:34:33",
                        "type": "string"
                    },
                    {
                        "name": "mood_id",
                        "in": "formData",
                        "required": true,
                        "description": "Mood Id",
                        "type": "integer"
                    },
                    {
                        "name": "activity_id",
                        "in": "formData",
                        "required": true,
                        "description": "Activity Id",
                        "type": "integer"
                    },
                    {
                        "name": "place_id",
                        "in": "formData",
                        "required": true,
                        "description": "Id of the selected place",
                        "type": "integer"
                    },
                    {
                        "name": "journal_entry",
                        "in": "formData",
                        "required": true,
                        "description": "Journal entry",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/DiariesStoreResponse"
                        },
                        "description": "DiariesStoreResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            },
            "get": {
                "tags": [
                    "Diaries"
                ],
                "summary": "List",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "diaries_get_list",
                "description": "",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Num of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page Number",
                        "type": "integer"
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "required": false,
                        "description": "Date from to start filter diary events",
                        "type": "string"
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "required": false,
                        "description": "End date to filter diary events",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/DiariesListResponse"
                        },
                        "description": "DiariesListResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/diaries\/average-stats": {
            "get": {
                "tags": [
                    "Diaries"
                ],
                "summary": "Average stats",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "diaries_get_average_stats",
                "description": "",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/DiariesAverageStatsResponse"
                        },
                        "description": "DiariesAverageStatsResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/diaries\/{id}": {
            "put": {
                "tags": [
                    "Diaries"
                ],
                "summary": "Edit",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "diaries_put_edit",
                "description": "",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Entity Id",
                        "type": "integer"
                    },
                    {
                        "name": "address",
                        "in": "formData",
                        "required": true,
                        "description": "Location address",
                        "type": "string"
                    },
                    {
                        "name": "latitude",
                        "in": "formData",
                        "required": true,
                        "description": "Latitude of the place",
                        "type": "string"
                    },
                    {
                        "name": "longitude",
                        "in": "formData",
                        "required": true,
                        "description": "Longitude of the place",
                        "type": "string"
                    },
                    {
                        "name": "event_time",
                        "in": "formData",
                        "required": true,
                        "description": "Time of the journal 2021-03-15 23:34:33",
                        "type": "string"
                    },
                    {
                        "name": "mood_id",
                        "in": "formData",
                        "required": true,
                        "description": "Mood Id",
                        "type": "integer"
                    },
                    {
                        "name": "activity_id",
                        "in": "formData",
                        "required": true,
                        "description": "Activity Id",
                        "type": "integer"
                    },
                    {
                        "name": "place_id",
                        "in": "formData",
                        "required": true,
                        "description": "Id of the selected place",
                        "type": "integer"
                    },
                    {
                        "name": "journal_entry",
                        "in": "formData",
                        "required": true,
                        "description": "Journal entry",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/DiariesEditResponse"
                        },
                        "description": "DiariesEditResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/personality-pins": {
            "post": {
                "tags": [
                    "My Places Pin"
                ],
                "summary": "Add My Personality Pin",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "my_places_pin_post_add_my_personality_pin",
                "description": "",
                "parameters": [
                    {
                        "name": "address",
                        "in": "formData",
                        "required": true,
                        "description": "Location address",
                        "type": "string"
                    },
                    {
                        "name": "latitude",
                        "in": "formData",
                        "required": true,
                        "description": "Latitude of the place",
                        "type": "string"
                    },
                    {
                        "name": "longitude",
                        "in": "formData",
                        "required": true,
                        "description": "Longitude of the place",
                        "type": "string"
                    },
                    {
                        "name": "describe",
                        "in": "formData",
                        "required": true,
                        "description": "Describe in a one word",
                        "type": "string"
                    },
                    {
                        "name": "pin_color",
                        "in": "formData",
                        "required": true,
                        "description": "selected color for the pin",
                        "type": "integer"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/MyPlacesPinAddMyPersonalityPinResponse"
                        },
                        "description": "MyPlacesPinAddMyPersonalityPinResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            },
            "get": {
                "tags": [
                    "My Places Pin"
                ],
                "summary": "List",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "my_places_pin_get_list",
                "description": "",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Num of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page Number",
                        "type": "integer"
                    },
                    {
                        "name": "describe",
                        "in": "query",
                        "required": false,
                        "description": "Describe personality in one word",
                        "type": "string"
                    },
                    {
                        "name": "pin_color",
                        "in": "query",
                        "required": false,
                        "description": "color choose per given one word description",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/MyPlacesPinListResponse"
                        },
                        "description": "MyPlacesPinListResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/notifications": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Index",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "notifications_get_index",
                "description": "",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number for paginate",
                        "type": "integer"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "x-device-id",
                        "in": "header",
                        "required": true,
                        "description": "Unique ID of the device",
                        "type": "string"
                    },
                    {
                        "name": "x-device-type",
                        "in": "header",
                        "required": true,
                        "description": "Type of the device `apple` or `android`",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/NotificationsIndexResponse"
                        },
                        "description": "NotificationsIndexResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Delete All",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "notifications_delete_delete_all",
                "description": "Delete All notification",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "`application\/json`",
                        "type": "string"
                    },
                    {
                        "name": "x-device-id",
                        "in": "header",
                        "required": true,
                        "description": "Unique ID of the device",
                        "type": "string"
                    },
                    {
                        "name": "x-device-type",
                        "in": "header",
                        "required": true,
                        "description": "Type of the device `apple` or `android`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/SuccessResponse"
                        },
                        "description": "SuccessResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/notifications\/{uuid}\/mark-as-read": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Mark a Notification as Read",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "notifications_post_mark_a_notification_as_read",
                "description": "",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "`application\/json`",
                        "type": "string"
                    },
                    {
                        "name": "x-device-id",
                        "in": "header",
                        "required": true,
                        "description": "Unique ID of the device",
                        "type": "string"
                    },
                    {
                        "name": "x-device-type",
                        "in": "header",
                        "required": true,
                        "description": "Type of the device `apple` or `android`",
                        "type": "string"
                    },
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "description": "Notification Uuid - Sent by the server for the notification",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/NotificationsMarkANotificationAsReadResponse"
                        },
                        "description": "NotificationsMarkANotificationAsReadResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/notifications\/{uuid}": {
            "delete": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Delete",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "notifications_delete_delete",
                "description": "Delete notification by id",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "`application\/json`",
                        "type": "string"
                    },
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "description": "notification uuid for delete",
                        "type": "integer"
                    },
                    {
                        "name": "x-device-id",
                        "in": "header",
                        "required": true,
                        "description": "Unique ID of the device",
                        "type": "string"
                    },
                    {
                        "name": "x-device-type",
                        "in": "header",
                        "required": true,
                        "description": "Type of the device `apple` or `android`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/SuccessResponse"
                        },
                        "description": "SuccessResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/settings\/{key}": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get Setting",
                "consumes": [
                    "application\/json"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "settings_get_get_setting",
                "description": "Returns the value of a single app setting requested by key.",
                "parameters": [
                    {
                        "name": "key",
                        "in": "path",
                        "required": true,
                        "description": "Key of the setting",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/SuccessResponse"
                        },
                        "description": "SuccessResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "apiKey": {
            "type": "apiKey",
            "name": "x-api-key",
            "in": "header",
            "description": "API Key for application"
        },
        "accessToken": {
            "type": "apiKey",
            "name": "x-access-token",
            "in": "header",
            "description": "Unique user authentication token"
        }
    },
    "definitions": {
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "cover_image_url": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "avatar_url": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                },
                "age_group": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "latitude": {
                    "type": "string"
                },
                "longitude": {
                    "type": "string"
                },
                "gender_id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "posts_keep_private": {
                    "type": "string"
                },
                "posts_with_public": {
                    "type": "string"
                },
                "posts_with_family": {
                    "type": "string"
                },
                "posts_with_friends": {
                    "type": "string"
                },
                "visible_username": {
                    "type": "string"
                },
                "complete_profile_remember": {
                    "type": "boolean"
                },
                "access_token": {
                    "type": "string"
                }
            }
        },
        "PushNotification": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "uuid": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "badge_count": {
                    "type": "integer"
                },
                "data": {
                    "type": "string"
                },
                "scheduled_at": {
                    "type": "string"
                },
                "scheduled_timezone": {
                    "type": "string"
                },
                "sent_at": {
                    "type": "string"
                },
                "read_at": {
                    "type": "string"
                },
                "notifiable_type": {
                    "type": "string"
                },
                "notifiable_id": {
                    "type": "string"
                },
                "topic": {
                    "type": "string"
                },
                "apns_config": {
                    "type": "string"
                },
                "android_config": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "Device": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "device_id": {
                    "type": "string"
                },
                "device_type": {
                    "type": "string"
                },
                "device_push_token": {
                    "type": "string"
                },
                "access_token": {
                    "type": "string"
                },
                "access_token_expires_at": {
                    "type": "string"
                },
                "latest_ip_address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "Setting": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "Mood": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "moodTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/MoodType"
                    }
                }
            }
        },
        "MoodType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "mood_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "colour": {
                    "type": "string"
                }
            }
        },
        "Place": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "placeTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/PlaceType"
                    }
                }
            }
        },
        "PlaceType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "place_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "colour": {
                    "type": "string"
                }
            }
        },
        "Activity": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                }
            }
        },
        "Feeling": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "feelingTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/FeelingType"
                    }
                }
            }
        },
        "FeelingRating": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "VisitedPlace": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "latitude": {
                    "type": "string"
                },
                "longitude": {
                    "type": "string"
                },
                "mood_id": {
                    "type": "integer"
                },
                "mood_type_id": {
                    "type": "integer"
                },
                "place_id": {
                    "type": "integer"
                },
                "place_type_id": {
                    "type": "integer"
                },
                "activity_id": {
                    "type": "integer"
                },
                "activity_type_id": {
                    "type": "integer"
                },
                "feeling_id": {
                    "type": "integer"
                },
                "feeling_rating": {
                    "type": "integer"
                },
                "feeling_note": {
                    "type": "string"
                },
                "flag": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "feeling_type_id": {
                    "type": "integer"
                },
                "mood": {
                    "$ref": "#\/definitions\/Mood"
                },
                "mood_type": {
                    "$ref": "#\/definitions\/MoodType"
                },
                "place": {
                    "$ref": "#\/definitions\/Place"
                },
                "place_type": {
                    "$ref": "#\/definitions\/PlaceType"
                },
                "activity": {
                    "$ref": "#\/definitions\/Activity"
                },
                "activity_type": {
                    "$ref": "#\/definitions\/ActivityType"
                },
                "feeling": {
                    "$ref": "#\/definitions\/Feeling"
                },
                "feeling_type": {
                    "$ref": "#\/definitions\/FeelingType"
                }
            }
        },
        "Answer": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "question_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "answer": {
                    "type": "number"
                }
            }
        },
        "ActivityLocation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "activity_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "latitude": {
                    "type": "string"
                },
                "longitude": {
                    "type": "string"
                }
            }
        },
        "HappynessOption": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "Question": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "happyness_test_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "parent_question_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "bottom_end_note": {
                    "type": "string"
                },
                "top_end_note": {
                    "type": "string"
                },
                "order_number": {
                    "type": "integer"
                },
                "happyness_option_id": {
                    "type": "string"
                },
                "sub_questions": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/SubQuestion"
                    }
                },
                "answer": {
                    "$ref": "#\/definitions\/Answer"
                }
            }
        },
        "HappynessTest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "happyness_option_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "short_intro": {
                    "type": "string"
                },
                "detail_intro": {
                    "type": "string"
                }
            }
        },
        "Friend": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "friend_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "is_accepted": {
                    "type": "integer"
                }
            }
        },
        "AgeGroup": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "Entry": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "latitude": {
                    "type": "string"
                },
                "longitude": {
                    "type": "string"
                },
                "privacy_level": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "post_date": {
                    "type": "string"
                },
                "mood_id": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/PostImage"
                    }
                },
                "mood": {
                    "$ref": "#\/definitions\/Mood"
                }
            }
        },
        "PostImage": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "post_id": {
                    "type": "string"
                },
                "image_path": {
                    "type": "string"
                }
            }
        },
        "DonotShareWithMeRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "post_id": {
                    "type": "string"
                }
            }
        },
        "image": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "local_path": {
                    "type": "string"
                }
            }
        },
        "MyPlace": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "latitude": {
                    "type": "string"
                },
                "longitude": {
                    "type": "string"
                },
                "my_place_category_id": {
                    "type": "string"
                },
                "my_place_opinion_id": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                }
            }
        },
        "MyPlaceCategory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "latitude": {
                    "type": "string"
                },
                "longitude": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "my_place_category_id": {
                    "type": "string"
                },
                "my_place_opinion_id": {
                    "type": "string"
                }
            }
        },
        "MyPlaceOpinion": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "Diary": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "latitude": {
                    "type": "string"
                },
                "longitude": {
                    "type": "string"
                },
                "event_time": {
                    "type": "string"
                },
                "mood_id": {
                    "type": "string"
                },
                "activity_id": {
                    "type": "string"
                },
                "place_id": {
                    "type": "string"
                },
                "journal_entry": {
                    "type": "string"
                }
            }
        },
        "MyPersonalityPin": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "describe": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "latitude": {
                    "type": "string"
                },
                "longitude": {
                    "type": "string"
                },
                "pin_color": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "ActivityType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "activity_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "colour": {
                    "type": "string"
                }
            }
        },
        "BigFiveTestResult": {
            "type": "object",
            "properties": {
                "question": {
                    "type": "string"
                },
                "letter": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "DiaryStats": {
            "type": "object",
            "properties": {
                "avarage_mode": {
                    "$ref": "#\/definitions\/Mood"
                },
                "avarage_activity": {
                    "$ref": "#\/definitions\/Activity"
                },
                "avarage_places": {
                    "$ref": "#\/definitions\/Place"
                }
            }
        },
        "FeelingType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "feeling_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "colour": {
                    "type": "string"
                }
            }
        },
        "File": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "original_filename": {
                    "type": "string"
                },
                "public_url": {
                    "type": "string"
                },
                "permalink": {
                    "type": "string"
                }
            }
        },
        "HappinessTestResult": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "score": {
                    "type": "string"
                }
            }
        },
        "HexacoTestResult": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "score": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                }
            }
        },
        "IconCategory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "PushNotificationStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "push_notification_id": {
                    "type": "integer"
                },
                "device_id": {
                    "type": "integer"
                },
                "seen_at": {
                    "type": "string"
                },
                "read_at": {
                    "type": "string"
                }
            }
        },
        "Gender": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "flag": {
                    "type": "string"
                }
            }
        },
        "SettingsResponse": {
            "type": "object",
            "properties": {
                "genders": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/Gender"
                    }
                }
            }
        },
        "SharedPost": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "shared_to": {
                    "type": "string"
                },
                "post_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#\/definitions\/User"
                },
                "shared_to_user": {
                    "$ref": "#\/definitions\/User"
                },
                "entry": {
                    "$ref": "#\/definitions\/Entry"
                }
            }
        },
        "SubQuestion": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "happyness_test_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "parent_question_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "bottom_end_note": {
                    "type": "string"
                },
                "top_end_note": {
                    "type": "string"
                },
                "order_number": {
                    "type": "integer"
                },
                "answer": {
                    "$ref": "#\/definitions\/Answer"
                }
            }
        },
        "SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "object"
                }
            }
        },
        "Paginator": {
            "type": "object",
            "properties": {
                "current_page": {
                    "type": "number"
                },
                "per_page": {
                    "type": "number",
                    "default": 50
                },
                "from": {
                    "type": "number"
                },
                "to": {
                    "type": "number"
                },
                "total": {
                    "type": "number"
                },
                "last_page": {
                    "type": "number"
                }
            }
        },
        "ApiErrorUnauthorized": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "object"
                }
            }
        },
        "ApiErrorAccessDenied": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "object"
                }
            }
        },
        "ApiError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "object"
                }
            }
        },
        "AuthRegisterResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/User"
                }
            }
        },
        "AuthLoginResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/User"
                }
            }
        },
        "AuthSocialLoginResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/User"
                }
            }
        },
        "SettingsGetSettingsResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/Setting"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "ProfileMyProfileResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/User"
                }
            }
        },
        "ProfileMyFriendsResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/User"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "ProfileMyFamilyResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/User"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "ProfileMyFriendRequestsResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/User"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "ProfileMyFamilyRequestsResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/User"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "ProfileUpdateMyProfileResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/User"
                }
            }
        },
        "ProfileHideProfileUpdateMessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/User"
                }
            }
        },
        "ProfileUpdateMyProfileSettingsResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/User"
                }
            }
        },
        "ProfileUpdateMyAvatarResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/User"
                }
            }
        },
        "ProfileUpdateMyCoverImageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/User"
                }
            }
        },
        "MoodsListResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/Mood"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "MoodsViewResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/Mood"
                }
            }
        },
        "MoodsTypesResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/MoodType"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "PlacesListResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/Place"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "PlacesViewResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/Place"
                }
            }
        },
        "PlacesTypesResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/PlaceType"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "ActivitiesListResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/Activity"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "ActivitiesViewResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/Activity"
                }
            }
        },
        "ActivitiesTypesResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/ActivityType"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "FeelingsListResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/Feeling"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "FeelingsViewResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/Feeling"
                }
            }
        },
        "FeelingsTypesResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/FeelingType"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "FeelingsListRatingsResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/FeelingRating"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "VisitedPlacesListResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/VisitedPlace"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "VisitedPlacesSaveResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/VisitedPlace"
                }
            }
        },
        "VisitedPlacesSaveFeelingResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/VisitedPlace"
                }
            }
        },
        "MyActivitiesStoreMyActivityLocationResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/ActivityLocation"
                }
            }
        },
        "MyActivitiesSearchResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/ActivityLocation"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "HappynessOptionsListResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/HappynessOption"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "HappynessTestsQuestionsResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/Question"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "TestResultsGetBigFiveTestResultsResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/BigFiveTestResult"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "TestResultsGetHEXACOTestResultsResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/HexacoTestResult"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "TestResultsGetHappinessTestResultsResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/HappinessTestResult"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "HappynessTestsListResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/HappynessTest"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "UsersSearchResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/User"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "UsersAgeGroupsResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/AgeGroup"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "FriendAddFriendOrFamilyResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/Friend"
                }
            }
        },
        "FriendAcceptFriendOrFamilyRequestResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/Friend"
                }
            }
        },
        "FriendRejectFriendOrFamilyRequestResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/Friend"
                }
            }
        },
        "EntriesIndex-EntriesExplorerResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/Entry"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "EntriesStoreResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/Entry"
                }
            }
        },
        "EntriesListResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/Entry"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "EntriesUpdateResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/Entry"
                }
            }
        },
        "EntriesGetSharedPostsResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/SharedPost"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "EntriesShareAPostsResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/SharedPost"
                }
            }
        },
        "ImageStoreImageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/image"
                }
            }
        },
        "MyPlacesAddMyPlaceResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/MyPlace"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "MyPlacesListResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/MyPlace"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "MyPlaceCategoriesMyPlaceCategoriesResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/MyPlaceCategory"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "MyPlacesMyPlaceOpinionsResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/MyPlaceOpinion"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "DiariesStoreResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/Diary"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "DiariesListResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/Diary"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "DiariesAverageStatsResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/Diary"
                }
            }
        },
        "DiariesEditResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/Diary"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "MyPlacesPinAddMyPersonalityPinResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/MyPersonalityPin"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "MyPlacesPinListResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/MyPersonalityPin"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "NotificationsIndexResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/PushNotification"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "NotificationsMarkANotificationAsReadResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/PushNotification"
                }
            }
        }
    }
}